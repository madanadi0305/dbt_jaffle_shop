{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-08-29T17:33:12.189550Z", "invocation_id": "4eba0714-63d6-424e-9caf-db75035a8bc1", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-29T17:33:11.739171Z", "completed_at": "2025-08-29T17:33:11.745161Z"}, {"name": "execute", "started_at": "2025-08-29T17:33:11.745161Z", "completed_at": "2025-08-29T17:33:11.852449Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1138010025024414, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.postgres_dbt_analytics.customer_orders", "compiled": true, "compiled_code": "\n\n\nwith customer_orders as (\nselect user_id,\n\ncount(case when  status='return_pending' then 1 else 0 end) as return_pending_count ,\n\ncount(case when  status='returned' then 1 else 0 end) as returned_count ,\n\ncount(case when  status='completed' then 1 else 0 end) as completed_count ,\n\ncount(case when  status='placed' then 1 else 0 end) as placed_count ,\n\ncount(case when  status='shipped' then 1 else 0 end) as shipped_count ,\n\n count(*) as number_of_orders from dbt_postgres_etl.\"public\".\"orders\" \n \ngroup by user_id\n)\nselect * from customer_orders", "relation_name": "\"dbt_postgres_etl\".\"public\".\"customer_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-29T17:33:11.856784Z", "completed_at": "2025-08-29T17:33:11.859638Z"}, {"name": "execute", "started_at": "2025-08-29T17:33:11.859638Z", "completed_at": "2025-08-29T17:33:11.971482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11532306671142578, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.postgres_dbt_analytics.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"dbt_postgres_etl\".\"public\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-29T17:33:11.973968Z", "completed_at": "2025-08-29T17:33:11.977600Z"}, {"name": "execute", "started_at": "2025-08-29T17:33:11.977600Z", "completed_at": "2025-08-29T17:33:12.054148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08018064498901367, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.postgres_dbt_analytics.order_payments", "compiled": true, "compiled_code": "\n\nwith order_payment_amount as(\n\nselect order_id, \n\nsum(case when payment_method='credit_card' then amount  end ) as credit_card_amount,\n\nsum(case when payment_method='bank_transfer' then amount  end ) as bank_transfer_amount,\n\nsum(case when payment_method='gift_card' then amount  end ) as gift_card_amount,\n\nsum(amount) as payment_amount\nfrom dbt_postgres_etl.\"public\".\"payments\"\ngroup by order_id\n\n) \nselect * from order_payment_amount", "relation_name": "\"dbt_postgres_etl\".\"public\".\"order_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-29T17:33:12.057485Z", "completed_at": "2025-08-29T17:33:12.060018Z"}, {"name": "execute", "started_at": "2025-08-29T17:33:12.060018Z", "completed_at": "2025-08-29T17:33:12.130589Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07463526725769043, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.postgres_dbt_analytics.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dbt_postgres_etl\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"dbt_postgres_etl\".\"public\".\"my_second_dbt_model\"", "batch_results": null}], "elapsed_time": 0.9522252082824707, "args": {"write_json": true, "log_format_file": "debug", "log_path": "C:\\Users\\Amadan\\dbt_jaffle_shop\\jaffle_shop_dbt\\postgres_dbt_analytics\\logs", "partial_parse_file_diff": true, "macro_debugging": false, "require_resource_names_without_spaces": false, "select": [], "require_explicit_package_overrides_for_builtin_materializations": true, "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "version_check": true, "vars": {}, "log_level": "info", "indirect_selection": "eager", "printer_width": 80, "introspect": true, "send_anonymous_usage_stats": true, "strict_mode": false, "cache_selected_only": false, "empty": false, "invocation_command": "dbt run", "require_nested_cumulative_type_params": false, "state_modified_compare_more_unrendered_values": false, "print": true, "source_freshness_run_project_hooks": false, "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "populate_cache": true, "defer": false, "log_file_max_bytes": 10485760, "quiet": false, "log_level_file": "debug", "which": "run", "state_modified_compare_vars": false, "exclude": [], "use_colors": true, "project_dir": "C:\\Users\\Amadan\\dbt_jaffle_shop\\jaffle_shop_dbt\\postgres_dbt_analytics", "partial_parse": true, "static_parser": true, "require_batched_execution_for_custom_microbatch_strategy": false, "favor_state": false, "use_colors_file": true, "require_yaml_configuration_for_mf_time_spines": false, "profiles_dir": "C:\\Users\\Amadan\\.dbt"}}